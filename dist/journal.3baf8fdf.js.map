{"mappings":"AAAA,MAAM,qBAAqB,SAAS,cAAc,CAAC;AAEnD,SAAS,cAAc,CAAC,iBAAiB,gBAAgB,CAAC,SAAS;IAC/D,MAAM,cAAc,SAAS,cAAc,CAAC;IAC5C,YAAY,SAAS,CAAC,MAAM,CAAC;AAC/B;AAEF,4CAA4C;AAC5C,SAAS,gBAAgB,CAAC,oBAAoB;AAE9C,SAAS;IACL,MAAM,YAAY,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,iBAAiB,EAAE;IACrE,mBAAmB,SAAS,GAAG,IAAI,sBAAsB;IAEzD,UAAU,OAAO,CAAC,CAAA;QACd,MAAM,YAAY,CAAC;;yDAE8B,EAAE,MAAM,WAAW,CAAC,OAAO,EAAE,MAAM,KAAK,CAAC;mDAC/C,EAAE,MAAM,KAAK,CAAC;mBAC9C,EAAE,MAAM,YAAY,CAAC;mCACL,EAAE,MAAM,EAAE,CAAC;2CACH,EAAE,MAAM,EAAE,CAAC;qDACD,EAAE,MAAM,EAAE,CAAC;;QAExD,CAAC;QACD,mBAAmB,SAAS,IAAI;IACpC;AACJ;AAEA,6BAA6B;AAC7B,SAAS,UAAU,OAAO;IACtB,MAAM,OAAO,SAAS,cAAc,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE,KAAK;IAC7D,IAAI,YAAY,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC;IAEhD,YAAY,UAAU,GAAG,CAAC,CAAA;QACtB,IAAI,MAAM,EAAE,KAAK,SACb,MAAM,IAAI,GAAG,MAAM,+BAA+B;QAEtD,OAAO;IACX;IAEA,aAAa,OAAO,CAAC,aAAa,KAAK,SAAS,CAAC;IACjD,MAAM;AACV;AAEA,SAAS,oBAAoB,OAAO;IAChC,sCAAsC;IACtC,IAAI,YAAY,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,iBAAiB,EAAE;IAEnE,qCAAqC;IACrC,YAAY,UAAU,MAAM,CAAC,CAAA,QAAS,MAAM,EAAE,KAAK;IAEnD,0DAA0D;IAC1D,aAAa,OAAO,CAAC,aAAa,KAAK,SAAS,CAAC;IAEjD,qEAAqE;IACrE,mBAAmB,+DAA+D;AACtF;AAGA,SAAS;IACL,MAAM,YAAY,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,iBAAiB,EAAE;IACrE,mBAAmB,SAAS,GAAG,IAAI,yBAAyB;IAE5D,UAAU,OAAO,CAAC,CAAA;QACd,MAAM,YAAY,CAAC;;yDAE8B,EAAE,MAAM,WAAW,CAAC,OAAO,EAAE,MAAM,KAAK,CAAC;mDAC/C,EAAE,MAAM,KAAK,CAAC;mBAC9C,EAAE,MAAM,YAAY,CAAC;mCACL,EAAE,MAAM,EAAE,CAAC;2CACH,EAAE,MAAM,EAAE,CAAC;qDACD,EAAE,MAAM,EAAE,CAAC;;QAExD,CAAC;QACD,mBAAmB,SAAS,IAAI;IACpC;AACJ","sources":["journal.js"],"sourcesContent":["const favoritesContainer = document.getElementById('favorites-container');\r\n\r\ndocument.getElementById('navbar-toggle').addEventListener('click', function () {\r\n    const navbarLinks = document.getElementById('navbar-links');\r\n    navbarLinks.classList.toggle('hidden');\r\n  });\r\n\r\n// Fetch favorites from localStorage on load\r\ndocument.addEventListener('DOMContentLoaded', displayFavorites);\r\n\r\nfunction displayFavorites() {\r\n    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n    favoritesContainer.innerHTML = ''; // Clear the container\r\n\r\n    favorites.forEach(movie => {\r\n        const movieCard = `\r\n            <div class=\"bg-white rounded shadow-md p-4\">\r\n                <img src=\"https://image.tmdb.org/t/p/w500${movie.poster_path}\" alt=\"${movie.title}\" class=\"w-full\">\r\n                <h3 class=\"text-xl font-bold mt-2\">${movie.title}</h3>\r\n                <p>${movie.release_date}</p>\r\n                <textarea id=\"note-${movie.id}\" placeholder=\"Add notes...\" class=\"border p-2 w-full\"></textarea>\r\n                <button onclick=\"saveNotes(${movie.id})\" class=\"bg-[#6DC8C8] text-white p-2 mt-2\">Save Notes</button>\r\n                <button onclick=\"removeFromFavorites(${movie.id})\" class=\"bg-red-500 text-white p-2 mt-2\">Remove from Favorites</button>\r\n            </div>\r\n        `;\r\n        favoritesContainer.innerHTML += movieCard;\r\n    });\r\n}\r\n\r\n// Save notes to localStorage\r\nfunction saveNotes(movieId) {\r\n    const note = document.getElementById(`note-${movieId}`).value;\r\n    let favorites = JSON.parse(localStorage.getItem('favorites'));\r\n\r\n    favorites = favorites.map(movie => {\r\n        if (movie.id === movieId) {\r\n            movie.note = note; // Add note to the movie object\r\n        }\r\n        return movie;\r\n    });\r\n\r\n    localStorage.setItem('favorites', JSON.stringify(favorites));\r\n    alert('Note saved!');\r\n}\r\n\r\nfunction removeFromFavorites(movieId) {\r\n    // Get the favorites from localStorage\r\n    let favorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n\r\n    // Filter out the movie to be removed\r\n    favorites = favorites.filter(movie => movie.id !== movieId);\r\n\r\n    // Update the localStorage with the updated favorites list\r\n    localStorage.setItem('favorites', JSON.stringify(favorites));\r\n\r\n    // Re-render the favorites list or remove the movie card from the DOM\r\n    renderFavorites(); // Assuming you have a function to re-render the favorites list\r\n}\r\n\r\n\r\nfunction renderFavorites() {\r\n    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n    favoritesContainer.innerHTML = ''; // Clear the current list\r\n\r\n    favorites.forEach(movie => {\r\n        const movieCard = `\r\n            <div class=\"bg-white rounded shadow-md p-4\">\r\n                <img src=\"https://image.tmdb.org/t/p/w500${movie.poster_path}\" alt=\"${movie.title}\" class=\"w-full\">\r\n                <h3 class=\"text-xl font-bold mt-2\">${movie.title}</h3>\r\n                <p>${movie.release_date}</p>\r\n                <textarea id=\"note-${movie.id}\" placeholder=\"Add notes...\" class=\"border p-2 w-full\"></textarea>\r\n                <button onclick=\"saveNotes(${movie.id})\" class=\"bg-[#6DC8C8] text-white p-2 mt-2\">Save Notes</button>\r\n                <button onclick=\"removeFromFavorites(${movie.id})\" class=\"bg-red-500 text-white p-2 mt-2\">Remove from Favorites</button>\r\n            </div>\r\n        `;\r\n        favoritesContainer.innerHTML += movieCard;\r\n    });\r\n}"],"names":[],"version":3,"file":"journal.3baf8fdf.js.map","sourceRoot":"/__parcel_source_root/"}